local config = require("scripts.config")

local planet = msg.url()
local clouds = msg.url()
local lakes = msg.url()

local planet_size = 0.0
local planet_time_speed = 0.0

local cloud_size = 0.0
local cloud_time_speed = 0

local lakes_size = 0.0
local lakes_time_speed = 0

local time = 1000.0

local function set_seed()
    go.set(planet, "generic.x", config.rseed)
    go.set(clouds, "generic.x", config.rseed)
    go.set(lakes, "generic.x", config.rseed)
end

local function set_pixel()
    go.set(planet, "transform.y", config.rpixel)
    go.set(clouds, "transform.y", config.rpixel)
    go.set(lakes, "transform.y", config.rpixel)
end

local function set_rotation()
    go.set(planet, "transform.z", config.rrot)
    go.set(clouds, "transform.z", config.rrot)
    go.set(lakes, "transform.z", config.rrot)
end

local function set_light()
    go.set(planet, "lights.x", config.rlight.x)
    go.set(planet, "lights.y", config.rlight.y)

    go.set(clouds, "lights.x", config.rlight.x)
    go.set(clouds, "lights.y", config.rlight.y)

    go.set(lakes, "lights.x", config.rlight.x)
    go.set(lakes, "lights.y", config.rlight.y)
end

local function planet_init()
    go.set(planet, "transform", vmath.vector4(8.0, 100, 0, 0))
    go.set(planet, "generic", vmath.vector4(1.036, 0.0, 0.25, 2.0))
    go.set(planet, "lights", vmath.vector4(0.3, 0.3, 0.0, 0.0))
    go.set(planet, "modify", vmath.vector4(0.0, 0.0, 2.0, 0.0))
    go.set(planet, "border", vmath.vector4(0.48, 0.632, 0.0, 0.0))
    go.set(planet, "color1", vmath.vector4(0.98, 1.0, 1.0, 1.0))
    go.set(planet, "color2", vmath.vector4(0.78, 0.83, 0.88, 1.0))
    go.set(planet, "color3", vmath.vector4(0.57, 0.56, 0.72, 1.0))

    go.set(clouds, "transform", vmath.vector4(4, 100, 0, 2.5))
    go.set(clouds, "generic", vmath.vector4(1.14, 0, 0.1, 4))
    go.set(clouds, "border", vmath.vector4(0.566, 0.781, 0, 0))
    go.set(clouds, "modify", vmath.vector4(0.546, 1.3, 0, 0))
    go.set(clouds, "lights", vmath.vector4(0.3, 0.3, 0, 0))
    go.set(clouds, "base_color", vmath.vector4(0.88, 0.95, 1.0, 1.0))
    go.set(clouds, "outline_color", vmath.vector4(0.75, 0.89, 1.0, 1.0))
    go.set(clouds, "shadow_base_color", vmath.vector4(0.37, 0.44, 0.65, 1.0))
    go.set(clouds, "shadow_outline_color", vmath.vector4(0.25, 0.29, 0.45, 1.0))
end

function init(self)
    planet = msg.url("planet_under#planet_under")
    clouds = msg.url("clouds#clouds")
    lakes = msg.url("lakes#lakes")

    planet_init()

    set_seed()
    set_pixel()
    set_rotation()

    planet_size = go.get(planet, "transform.x")
    planet_time_speed = go.get(planet, "generic.z")
    planet_size = config.round(planet_size * 2.0) / planet_time_speed

    cloud_size = go.get(clouds, "transform.x")
    cloud_time_speed = go.get(clouds, "generic.z")
    cloud_size = config.round(cloud_size * 2.0) / cloud_time_speed

    lakes_size = go.get(lakes, "transform.x")
    lakes_time_speed = go.get(lakes, "generic.z")
    lakes_size = config.round(lakes_size * 2.0) / lakes_time_speed
end

function update(self, dt)
    time = time + dt
    go.set(planet, "generic.y", time * planet_size * 0.02)
    go.set(clouds, "generic.y", time * cloud_size * 0.01)
    go.set(lakes, "generic.y", time * lakes_size * 0.02)
end

function on_message(self, message_id, message, sender)
    if message_id == config.msg.set_planet_seed then
        set_seed()
    elseif message_id == config.msg.set_planet_pixel then
        set_pixel()
    elseif message_id == config.msg.set_planet_rotation then
        set_rotation()
    elseif message_id == config.msg.set_planet_light then
        set_light()
    end
end
